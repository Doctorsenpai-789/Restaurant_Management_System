/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 2ndyrGroupA
 */
public class Product extends javax.swing.JInternalFrame {

    /**
     * Creates new form Product
     */
    public Product() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    Connection con;
    PreparedStatement insert;

    public void data() {
        int count;
        try {
            Class.forName("com.mysql.jdbc.Driver");

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant_db", "root", "");

            insert = con.prepareStatement("select * from product");
            ResultSet result = insert.executeQuery();
            ResultSetMetaData datas = result.getMetaData();
            count = datas.getColumnCount();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            while (result.next()) {
                Vector info = new Vector();

                for (int a = 1; a <= count; a++) {
                    info.add(result.getString("id"));
                    info.add(result.getString("product_name"));
                    info.add(result.getString("product_price"));

                }

                model.addRow(info);
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        productprice = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(610, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productnameActionPerformed(evt);
            }
        });
        getContentPane().add(productname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 204, 38));

        jLabel3.setFont(new java.awt.Font("Lucida Sans Typewriter", 2, 18)); // NOI18N
        jLabel3.setText("ProductName:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 140, 30));

        jLabel4.setFont(new java.awt.Font("Lucida Sans Typewriter", 2, 18)); // NOI18N
        jLabel4.setText("Price:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 114, 37));

        productprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productpriceActionPerformed(evt);
            }
        });
        getContentPane().add(productprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 204, 38));

        btnCreate.setBackground(new java.awt.Color(0, 204, 0));
        btnCreate.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        btnCreate.setText("ADD");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        getContentPane().add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 98, 45));

        btnUpdate.setBackground(new java.awt.Color(0, 102, 255));
        btnUpdate.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        btnUpdate.setText("EDIT");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 104, 45));

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 111, 45));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " ID", "PRODUCT NAME", "PRODUCT PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 443, 140));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (productname.getText().isEmpty() || productprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields");
        } else {

            try {
                Class.forName("com.mysql.jdbc.Driver"); //load the driver
                //Connection con = DriverManager.getConnection("jdbc:mysql://192.168.0.2/torresRa", "torresRa", "ravenAccess");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant_db", "root", "");
                Statement stmt = (Statement) con.createStatement(); //get the connection stream(connection port)

                String query = "INSERT INTO `product`(`product_name`,`product_price`) VALUES ('" + this.productname.getText() + "','" + this.productprice.getText() + "')";
                stmt.executeUpdate(query);
                con.close();
                JOptionPane.showMessageDialog(this, "Successfully Added.");
                data();

            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       
        if (productname.getText().isEmpty() || productprice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields");
            int i = Integer.parseInt(productname.getText());
            System.out.println(i);
        } else {
        
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedIndex = table.getSelectedRow();

        try {

            int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
            String productName = productname.getText();
            String productPrice = productprice.getText();

            Class.forName("com.mysql.jdbc.Driver");
            //con = DriverManager.getConnection("jdbc:mysql://192.168.0.2/torresRa", "torresRa", "ravenAccess");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant_db", "root", "");
            insert = con.prepareStatement("UPDATE product SET product_name= ? , product_price=? WHERE id=?");

            insert.setString(1, productName);
            insert.setString(2, productPrice);
            insert.setInt(3, id);

            insert.executeUpdate();
            JOptionPane.showMessageDialog(this, "Succesfully Updated");

            data();

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedIndex = table.getSelectedRow();

        try {

            int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the product?", "Warning", JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");
                //con = DriverManager.getConnection("jdbc:mysql://192.168.0.2/torresRa", "torresRa", "ravenAccess");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant_db", "root", "");
                insert = con.prepareStatement("DELETE FROM product WHERE id=? ");

                insert.setInt(1, id);

                insert.executeUpdate();
                JOptionPane.showMessageDialog(this, "Succesfully Deleted");

                data();

                con.close();
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedIndex = table.getSelectedRow();

        productname.setText(model.getValueAt(selectedIndex, 1).toString());
        productprice.setText(model.getValueAt(selectedIndex, 2).toString());

    }//GEN-LAST:event_tableMouseClicked

    private void productpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productpriceActionPerformed

    private void productnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productnameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField productname;
    private javax.swing.JTextField productprice;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
